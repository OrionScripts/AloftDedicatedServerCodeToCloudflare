export default {
    async fetch(request, env) {
        try {
            if (request.method === "POST") {
                const body = await request.json();
                if (!body.code) {
                    return new Response("Invalid request: Missing 'code'", { status: 400 });
                }

                // Store only the string representation of the code
                await env.JOIN_CODES.put("latest_code", body.code.toString());

                return new Response("Code Updated", { status: 200 });
            }

            if (request.method === "GET") {
                const code = await env.JOIN_CODES.get("latest_code");
                if (!code) {
                    return new Response("No code available", { status: 404 });
                }

                // HTML Response with larger font
                const html = `
                    <html>
                    <head>
                        <title>Server Room Code</title>
                        <style>
                            body { 
                                font-family: Arial, sans-serif; 
                                text-align: center; 
                                padding: 50px; 
                                background-color: #121212; 
                                color: white;
                            }
                            .code-container {
                                font-size: 48px; 
                                font-weight: bold;
                                margin-top: 20px;
                            }
                            .message {
                                font-size: 24px;
                                margin-top: 10px;
                            }
                        </style>
                    </head>
                    <body>
                        <div class="message">Today's Server Code Is:</div>
                        <div class="code-container">${code}</div>
                        <div class="message">ENJOY!</div>
                    </body>
                    </html>
                `;

                return new Response(html, { headers: { "Content-Type": "text/html" } });
            }

            return new Response("Invalid Request", { status: 400 });
        } catch (error) {
            return new Response("Worker Error: " + error.message, { status: 500 });
        }
    }
};
